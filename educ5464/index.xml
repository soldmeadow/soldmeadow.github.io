<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>EDUC5464 ICT Curriculum 1</title>
    <link>https://soldmeadow.github.io/educ5464/index.xml</link>
    <description>Recent content on EDUC5464 ICT Curriculum 1</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>18819519@student.uwa.edu.au (Stephen Oldmeadow)</managingEditor>
    <webMaster>18819519@student.uwa.edu.au (Stephen Oldmeadow)</webMaster>
    <atom:link href="https://soldmeadow.github.io/educ5464/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title></title>
      <link>https://soldmeadow.github.io/educ5464/page/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>18819519@student.uwa.edu.au (Stephen Oldmeadow)</author>
      <guid>https://soldmeadow.github.io/educ5464/page/about/</guid>
      <description>

&lt;h1 id=&#34;testing&#34;&gt;Testing&lt;/h1&gt;

&lt;p&gt;Testing
About
There is no easy way to see.&lt;/p&gt;

&lt;p&gt;The quick brown fox jumped over the lazy dog.&lt;/p&gt;

&lt;h2 id=&#34;heading-2&#34;&gt;Heading 2&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Hello&lt;/li&gt;
&lt;li&gt;There&lt;/li&gt;
&lt;li&gt;You&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is important to note that nearl &lt;strong&gt;&lt;em&gt;everybody&lt;/em&gt;&lt;/strong&gt; will need to access medical care.&lt;/p&gt;

&lt;p&gt;Video games in education is nearly.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://soldmeadow.github.io/educ5464/page/reflections/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>18819519@student.uwa.edu.au (Stephen Oldmeadow)</author>
      <guid>https://soldmeadow.github.io/educ5464/page/reflections/</guid>
      <description>

&lt;h1 id=&#34;reflections&#34;&gt;Reflections&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../../reflections/coding&#34;&gt;Coding as a Literacy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../reflections/games&#34;&gt;Video Game Development for Learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../reflections/create_or_consume&#34;&gt;ICT for Creation Vs Consumption&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://soldmeadow.github.io/educ5464/page/resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>18819519@student.uwa.edu.au (Stephen Oldmeadow)</author>
      <guid>https://soldmeadow.github.io/educ5464/page/resources/</guid>
      <description>

&lt;h1 id=&#34;resources&#34;&gt;Resources&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Assessment 1 worksheet: &lt;a href=&#34;../../doc/DTC_worksheet.pdf&#34;&gt;Scratch Icy Poles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Assessment 1 presentation: &lt;a href=&#34;../../doc/DTC_presentation.pdf&#34;&gt;Computers Don&amp;rsquo;t Make Sandwiches&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Assessment 1 Scratch project: &lt;a href=&#34;https://scratch.mit.edu/projects/152105860/&#34;&gt;Icy Poles&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://soldmeadow.github.io/educ5464/page/tools/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>18819519@student.uwa.edu.au (Stephen Oldmeadow)</author>
      <guid>https://soldmeadow.github.io/educ5464/page/tools/</guid>
      <description>

&lt;h1 id=&#34;tools&#34;&gt;Tools&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../../tools/scratch&#34;&gt;Scratch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../tools/p5&#34;&gt;p5.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../tools/unity&#34;&gt;Unity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../tools/git&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../tools/minecraft&#34;&gt;Minecraft&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://soldmeadow.github.io/educ5464/reflections/coding/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>18819519@student.uwa.edu.au (Stephen Oldmeadow)</author>
      <guid>https://soldmeadow.github.io/educ5464/reflections/coding/</guid>
      <description>

&lt;h1 id=&#34;coding-as-a-literacy&#34;&gt;Coding as a Literacy&lt;/h1&gt;

&lt;p&gt;In the &lt;em&gt;NMC/CoSN Horizon Report: 2016 K-12&lt;/em&gt; Becker, Freeman, Giessinger Hall, Cummins and Yuhnke (2016) report that coding, or computer programming, is increasingly being adopted in school curriculums around the world in response to economic factors and the belief that coding can assist with the development of a raft of fluencies that are often described using the term &amp;lsquo;21st century skills&amp;rsquo;.  Becker et al (2016) see this trend increasing into the future.&lt;/p&gt;

&lt;p&gt;In Australia factors such as our falling PISA ranking and the desire to transition our economy from its reliance on resources spurred moves towards creating an innovation mindset and a STEM focus in schools.  Consequently coding is an integral part of the new Digital Technologies curriculum currently being introduced in Australian schools (ACARA, 2017).  Additionally, within Western Australia the recently elected Premier Mark McGowan has &lt;a href=&#34;https://www.markmcgowan.com.au/news/science-and-coding-in-schools-to-create-jobs-for-the-future-1303&#34;&gt;pledged $2 million dollars&lt;/a&gt; to fund the integration of coding into the school curriculum.  In short, coding has already arrived in the Western Australian education system.&lt;/p&gt;

&lt;p&gt;As a pre-service ICT teacher who desires to teach coding this is an issue close to my heart.  I agree that coding can help develop 21st century skills but I believe it can be greatly beneficial to traditional skills as well and offers great possibilities when combined with other curriculum areas, particularly maths and science.  As far back as 1980 Seymour Papert wrote his seminal book Mindstorms where he argued for computers to be used as learning tools for children to become &amp;ldquo;builders of their own intellectual structures&amp;rdquo; (Papert, 1980).  Unfortunately, over time computer usage in schools evolved to something more mundane, far removed from what was imagined by Papert.  Coding in the curriculum may help unlock the true potential of computers for learning.&lt;/p&gt;

&lt;p&gt;However, I&amp;rsquo;m extremely dubious about the economic claims made around coding.  For example, Becker et al (2016) quote a prediction made by code.org that by 2020 there will be 1,000,000 more computing jobs than computing graduates (presumably in the US).  This sounds impressive but code.org provide no evidence for how the statistic was calculated nor do they explain what a computing job is.  One problem with statistics around ICT employment is that they often conflate a wide range of jobs such as sales, support and facilities management with software development.  If job prospects are the main driver for teaching coding then we need to be honest about what those job prospects are.&lt;/p&gt;

&lt;p&gt;We must also consider the ability of schools to move in this direction.  I feel secondary schools, particularly large ones that already have specialist staff teaching subjects such as Computer Science will easily move towards coding as a literacy and, in fact, many of them are already on this path.  Where I see trouble arising is in primary schools where it often falls on the class teacher to teach all aspects of the curriculum.  There are, no doubt, many primary teachers capable of teaching coding but I have also encountered many reluctant ones and some may feel teaching coding wasn&amp;rsquo;t the job they signed up for.  Fortunately, the coding curriculum for primary school is fairly trivial and as long as students emerge from primary school with a positive disposition towards ICT and coding then any shortfall in their knowledge can easily be corrected in secondary school.&lt;/p&gt;

&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;

&lt;p&gt;ACARA. (2017). Digital Technologies.    Retrieved from &lt;a href=&#34;http://www.australiancurriculum.edu.au/technologies/digital-technologies/curriculum/f-10?layout=1&#34;&gt;http://www.australiancurriculum.edu.au/technologies/digital-technologies/curriculum/f-10?layout=1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Adams Becker, S., Freeman, A., Giesinger Hall, C., Cummins, M.,
and Yuhnke, B. (2016). &lt;em&gt;NMC/CoSN Horizon Report: 2016 K-12
Edition&lt;/em&gt;. Austin, Texas: The New Media Consortium.&lt;/p&gt;

&lt;p&gt;Papert, S. (1980). &lt;em&gt;Mindstorms: Children, computers, and powerful ideas&lt;/em&gt;. Basic Books, Inc..&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://soldmeadow.github.io/educ5464/reflections/create_or_consume/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>18819519@student.uwa.edu.au (Stephen Oldmeadow)</author>
      <guid>https://soldmeadow.github.io/educ5464/reflections/create_or_consume/</guid>
      <description>

&lt;h1 id=&#34;ict-for-consumption-vs-creation&#34;&gt;ICT for Consumption Vs Creation&lt;/h1&gt;

&lt;p&gt;In 2014 Australian Prime Minister Malcolm Turnbull gave a speech entitled The Importance of Tech Education in Our Schools (Turnbull, 2014).  In his speech Turnbull (2014) argued that in our modern times even young children had ICT capabilities, such as using an iPad, and the focus of education should move to teaching children to be creators rather than passive consumers of digital technologies.  Turnbull (2014) was largely paraphrasing the thoughts of US President Barack Obama who had admonished American students to “Don’t just play on your phone, program it’” Turnbull (2014).  Now, in 2017, we find Malcolm Turnbull’s sentiments encoded in the Australian Digital Technologies Curriculum which seeks to enable students to “become innovative creators of digital solutions” (ACARA, 2017).&lt;/p&gt;

&lt;p&gt;Malcolm Turnbull was explicit in his view that a move to teaching students to become digital creators was driven by an economic imperative, specifically that jobs of the future will require these skills (Turnbull, 2014).  There is also the view that there are many technologies such as robotics, AI and 3d printing that are on the cusp of explosive growth and governments around the world desire to share in the economic benefits (Dougherty, 2016).&lt;/p&gt;

&lt;p&gt;I’m happy to see this move towards an emphasis on digital creation, especially as I want to teach coding and my educational philosophy is aligned with constructivism and an emphasis on “learning by doing”.  However, I share the view of Blikstein and Worsley (2016) that we must be careful to emphasise the process of creation over the product of creation.  Blikstein (2013) coined the phrase “keychain syndrome” to describe a phenomenon he witnessed whereby students in a class were introduced to digital fabrication technologies with a simple keychain exercise, however, the students never wanted to progress beyond making the keychains as they received a massive return on their minimal time investment as people unfamiliar with the fabrication technology were amazed by their creations.  Keychain syndrome has since been adopted as a term to describe trivialised projects that are designed to be produced within tight time constraints but impress people unfamiliar with the technology involved (Martinez &amp;amp; Stager, 2013).&lt;/p&gt;

&lt;p&gt;I feel we must be careful in Australian schools to not overemphasise product over process.  Students need to be able to undertake meaningful, complex projects that can potentially fail so they can learn valuable skills such as creativity, innovation, persistence and problem solving.  To conclude, I would like to offer the example of &lt;a href=&#34;http://codecamp.com.au/&#34;&gt;Code Camp&lt;/a&gt; as an example of where Australian schools should not head.  &lt;a href=&#34;http://codecamp.com.au/&#34;&gt;Code Camp&lt;/a&gt; offers after school and school holiday programs that “teach kids to code”.  They utilise creator vs consumer rhetoric in their advertising and there is a heavy emphasis on the fact that children will have produced a working game at the end of their course.  To achieve such a goal the students are heavily scaffolded and guided down certain paths, there is little opportunity for divergent thinking.  I believe &lt;a href=&#34;http://codecamp.com.au/&#34;&gt;Code Camp&lt;/a&gt; is an excellent example of keychain syndrome in action.  In contrast, &lt;a href=&#34;http://coderdojowa.org.au/&#34;&gt;CoderDojo&lt;/a&gt; provides extra-curricular coding clubs but children choose their own project and are largely self-guided and I feel this is a better model for schools to follow.&lt;/p&gt;

&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;

&lt;p&gt;ACARA. (2017). Digital Technologies.    &lt;a href=&#34;Retrieved from http://www.australiancurriculum.edu.au/technologies/digital-technologies/curriculum/f-10?layout=1&#34;&gt;Retrieved from http://www.australiancurriculum.edu.au/technologies/digital-technologies/curriculum/f-10?layout=1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Blikstein, P. (2013). Digital fabrication and ‘making’in education: The democratization of invention. &lt;em&gt;FabLabs: Of machines, makers and inventors&lt;/em&gt;, 1-21.&lt;/p&gt;

&lt;p&gt;Blikstein, P., &amp;amp; Worsley, M. (2016). Children Are Not Hackers: Building a Culture of Powerful Ideas, Deep Learning and Equity in the Maker Movement. &lt;em&gt;Makeology: Makerspaces as learning environments&lt;/em&gt;, 1, 64.&lt;/p&gt;

&lt;p&gt;Dougherty, D. (2016). &lt;em&gt;Free to Make: How the Maker Movement is Changing Our Schools, Our Jobs and Our Minds&lt;/em&gt;. Berkeley, California: North Atlantic Books.&lt;/p&gt;

&lt;p&gt;Martinez, S. L., &amp;amp; Stager, G. (2013). &lt;em&gt;Invent to learn: Making, tinkering, and engineering in the classroom&lt;/em&gt;. Constructing modern knowledge press Torrance, CA.&lt;/p&gt;

&lt;p&gt;Turnbull, M. (2014). Speech: The Importance of Tech Education in Our Schools.    Retrieved from &lt;a href=&#34;https://www.malcolmturnbull.com.au/media/speech-the-importance-of-tech-education-in-our-schools&#34;&gt;https://www.malcolmturnbull.com.au/media/speech-the-importance-of-tech-education-in-our-schools&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://soldmeadow.github.io/educ5464/reflections/games/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>18819519@student.uwa.edu.au (Stephen Oldmeadow)</author>
      <guid>https://soldmeadow.github.io/educ5464/reflections/games/</guid>
      <description>

&lt;h1 id=&#34;video-game-development-for-learning&#34;&gt;Video Game Development for Learning&lt;/h1&gt;

&lt;p&gt;Developing video games was my entry point into the world of computer programming and I have many fond high school memories of spending time in the computer lab with my friends developing and playing our games.  We never felt like we were learning but with hindsight informed by studying teaching I see we were immersed in a social constructivist learning experience that many teachers would love to be able to orchestrate for their students.  My high school programming career was played out against the back drop of the golden age of arcade video games and needless to say video games and the surrounding culture was a large preoccupation for myself and my friends.  Again, with hindsight, I see how my engagement and motivation to program computer games was driven by my interest in playing video games outside of school.  Developing video games in high school was such a profound and enjoyable experience for me that I want to provide that experience for my students.&lt;/p&gt;

&lt;p&gt;In our present day video games are still a major preoccupation for adolescents.  Granic, Lobel, and Engels (2014) report 91% of children aged between 2 and 17 in the United States play video games.  This staggering statistic is partly driven by mobile devices with every mobile phone now capable of playing games that would have astounded my high school self.  Even without mobile gaming the world of video games is an important facet of teenage culture.  The Australian Professional Standards for Teachers impels teachers to “Know students” (AITSL, 2012) and it could be argued that understanding important elements of teenage culture such as video games and music is essential to understanding teenage students.  The standards also task teachers with delivering engaging lessons (AITSL, 2012) and it is well accepted that lessons tied to students’ interests that connect meaningfully to their lives will increase student engagement (McDonald, 2013).&lt;/p&gt;

&lt;p&gt;With computer programming, or coding, now a part of the Australian curriculum (ACARA, 2017) developing video games provides a wonderful opportunity to teach students this skill in a way that is engaging to them.  Papert (1998) also saw engaging students in video game development as a powerful means to teach them coding skills but more importantly as a basis for teaching them about learning.  Papert (1998) envisaged a future where children would develop video games as readily as they draw pictures or write stories.&lt;/p&gt;

&lt;p&gt;Video game development also provides a great opportunity to reinforce math concepts.  A common complaint of high school mathematics students is that they can see no use for the concepts they are learning (Ellenberg, 2015).  However, many mathematics concepts can be directly applied in video games, particularly for 3d games.  For example, many people struggle to see the point of complex numbers (a number that includes an imaginary component that is the seemingly impossible square root of a negative number), however, complex numbers form the basis of quaternions which are widely used for describing rotations in 3d games.&lt;/p&gt;

&lt;p&gt;Upon my first day of practicum as a pre-service teacher I was given my mentor’s timetable and was greatly pleased to see Game Design classes peppered throughout the week.  I have only attended one Game Design class to date but I was overjoyed to see a class of students deeply engaged in creating games and enthusiastically demonstrating their creations to me.  I recently learnt about the &lt;a href=&#34;https://www.stemgames.org.au/&#34;&gt;Australian STEM Video Game Challenge&lt;/a&gt; which is a competition sponsored by ACER and encourages students to create and submit video games to the competition (Australian STEM Video Game Challenge, 2017) and will be encouraging my students to enter.  I now feel my dream to teach students video game development is within reach.&lt;/p&gt;

&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;

&lt;p&gt;ACARA. (2017). Digital Technologies.    Retrieved from &lt;a href=&#34;http://www.australiancurriculum.edu.au/technologies/digital-technologies/curriculum/f-10?layout=1&#34;&gt;http://www.australiancurriculum.edu.au/technologies/digital-technologies/curriculum/f-10?layout=1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AITSL. (2012). Australian Professional Standards for Teachers. Victoria: Author.&lt;/p&gt;

&lt;p&gt;Australian STEM Video Game Challenge. (2017). Our Mission.    Retrieved from &lt;a href=&#34;https://www.stemgames.org.au/about/our-mission&#34;&gt;https://www.stemgames.org.au/about/our-mission&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ellenberg, J. (2015). &lt;em&gt;How not to be wrong: The power of mathematical thinking&lt;/em&gt;. Penguin.&lt;/p&gt;

&lt;p&gt;Granic, I., Lobel, A., &amp;amp; Engels, R. C. (2014). The benefits of playing video games. &lt;em&gt;American Psychologist&lt;/em&gt;, 69(1), 66.&lt;/p&gt;

&lt;p&gt;McDonald, T. (2013). &lt;em&gt;Classroom management: Engaging students in learning&lt;/em&gt;. Melbourne: Oxford University Press.&lt;/p&gt;

&lt;p&gt;Papert, S. (1998). Does easy do it? Children, games, and learning. &lt;em&gt;Game developer magazine&lt;/em&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://soldmeadow.github.io/educ5464/tools/git/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>18819519@student.uwa.edu.au (Stephen Oldmeadow)</author>
      <guid>https://soldmeadow.github.io/educ5464/tools/git/</guid>
      <description>

&lt;h1 id=&#34;github&#34;&gt;GitHub&lt;/h1&gt;

&lt;p&gt;&lt;img src=&#34;../../img/git.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com&#34;&gt;GitHub&lt;/a&gt; is a ostensibly an online repository for source code but a large community has grown up around it and it is arguably the de facto standard for hosting source code for open source projects.&lt;/p&gt;

&lt;h3 id=&#34;pros&#34;&gt;Pros&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Free for public repositories and students can get free private repositories.&lt;/li&gt;
&lt;li&gt;Web based.&lt;/li&gt;
&lt;li&gt;Largest repository of source code in the world, many great open source projects to learn and build from.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;cons&#34;&gt;Cons&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Lots of jargon that needs to be learnt such as pushing, pulling, commits and branches.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;recommended-for&#34;&gt;Recommended For&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Students in vocational ICT courses.&lt;/li&gt;
&lt;li&gt;Managing collaboration in software development projects where students are working as a group.&lt;/li&gt;
&lt;li&gt;As a resource for source code to build upon or learn from.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;details&#34;&gt;Details&lt;/h3&gt;

&lt;p&gt;Software development projects often involve many files with complex interdependencies between them.  The complexity of managing these files is increased when multiple developers are working on the project and multiple people may be modifying the same files.  Version control software arose to manage these complex interdependencies.  Git was developed as the version control software for the Linux open source project which is arguably the largest distributed software development project in the world with over 20 million lines of code and over 10,000 developers.&lt;/p&gt;

&lt;p&gt;GitHub is an online website and community that hosts software projects using Git for version control.  In Git terminology a software project is stored in a repository and GitHub hosts these repositories.  GitHub added social networking features as well as other valuable features such as bug reporting and issue tracking.&lt;/p&gt;

&lt;p&gt;Using GitHub and Git can initially seem daunting as there is a large amount of jargon that needs to be understood.  For example, you clone a repository, make changes, commit your changes, push them back to the repository and pull down other people&amp;rsquo;s changes.  However, many great GUI tools have been developed to help simplify working with Git and GitHub with many of them being free such as &lt;a href=&#34;https://desktop.github.com/&#34;&gt;GitHub Desktop&lt;/a&gt;.  Additionally, many integrated development tools have support for Git built in such as &lt;a href=&#34;https://developer.apple.com/support/xcode/&#34;&gt;Xcode&lt;/a&gt; which is provided free by Apple for developing software for their platforms.&lt;/p&gt;

&lt;p&gt;GitHub is a great way for students to learn about online collaboration as required by the Digital Technologies Curriculum.  Even if students don&amp;rsquo;t use GitHub they should be aware of it and know how to download projects that are hosted on GitHub just because of the sheer number of projects on GitHub.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://soldmeadow.github.io/educ5464/tools/minecraft/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>18819519@student.uwa.edu.au (Stephen Oldmeadow)</author>
      <guid>https://soldmeadow.github.io/educ5464/tools/minecraft/</guid>
      <description>

&lt;h1 id=&#34;minecraft&#34;&gt;Minecraft&lt;/h1&gt;

&lt;p&gt;&lt;img src=&#34;../../img/minecraft.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://minecraft.net&#34;&gt;Minecraft&lt;/a&gt; is an open-world game with extensive options for modifying the game world.&lt;/p&gt;

&lt;h3 id=&#34;pros&#34;&gt;Pros&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Popular with students.&lt;/li&gt;
&lt;li&gt;Inexpensive.&lt;/li&gt;
&lt;li&gt;Runs on a wide variety of platforms.&lt;/li&gt;
&lt;li&gt;Allows multiplayer interaction.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;cons&#34;&gt;Cons&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Several different versions that aren&amp;rsquo;t all interoperable.&lt;/li&gt;
&lt;li&gt;Different versions, vast functionality and constant evolution make it difficult to comprehend all the possibilities for using Minecraft in the classroom.&lt;/li&gt;
&lt;li&gt;Seen as unfashionable by some students.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;recommended-for&#34;&gt;Recommended For&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Teaching coding to students that are motivated by playing Minecraft.&lt;/li&gt;
&lt;li&gt;Creating interactive, multiplayer simulations for teaching non ICT subjects such as science and geography.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;details&#34;&gt;Details&lt;/h3&gt;

&lt;p&gt;On the surface Minecraft is a game but this description doesn&amp;rsquo;t really do justice to the diverse possibilities for using Minecraft in classrooms.  One of the biggest barriers Minecraft faces is getting people to understand what it is and what it can do because it can be and do so many different things.  At first glance Minecraft can appear to be simplistic as its graphics are composed of cubic blocks, however, Minecraft&amp;rsquo;s block based design allows every block in the game level to be modified which opens up huge possibilities for interacting with the game.&lt;/p&gt;

&lt;p&gt;In addition to its open, modifiable nature Minecraft also offers several possibilities for programming behaviour within the game.  Firstly, Minecraft has a redstone subsystem that consists of several different block types that can be connected to form basic mechanisms.  The behaviour of redstone is very similar to electric circuits and it is possible to build logic gates such as AND and OR.  This has led to people building complex devices in Minecraft, such as calculators, purely from redstone components.&lt;/p&gt;

&lt;p&gt;Another mechanism for programming Minecraft is commands and command blocks.  Minecraft offers a command line that can be used to execute rudimentary commands that modify the game environment such as changing the weather or moving a player to a certain location.  The command line behaves very similarly to operating system command line processors such as Unix shells.  The command line also has strict syntactic requirements, commands must be typed exactly and this is a great way to introduce students to the strict syntax requirements of general purpose programming languages.  In addition to the command line Minecraft has command blocks that can be placed in the game world and execute commands when the player interacts with them.  Using command blocks allows for an event driven programming model that would allow students to control behaviours within the game.&lt;/p&gt;

&lt;p&gt;The original versions of Minecraft were written in Java which is an interpreted language.  This allowed people to reverse engineer the Minecraft code and introduce modifications.  A huge community grew up around Minecraft &amp;ldquo;mods&amp;rdquo; that altered the basic gameplay of Minecraft and to some extent created completely different games.  However, the &amp;ldquo;mod&amp;rdquo; scene operates in a morally grey area as it isn&amp;rsquo;t officially condoned by Microsoft yet it is arguably partly responsible for the huge success of Minecraft.  Using Java code and &amp;ldquo;mod&amp;rdquo; frameworks students could program Minecraft, however, the legal ramifications are not clear and it is probably best avoided in a school environment.  There are organisations offering classes in &amp;ldquo;modding&amp;rdquo; Minecraft during school holidays and students that have an interest could be directed to those.&lt;/p&gt;

&lt;p&gt;After Microsoft acquired Minecraft in 2014 it set to work creating versions of Minecraft that were natively compiled and therefor ran faster than the interpreted Java versions.  However, the faster native versions are unable to be modified which has caused a fracture in the community with many people sticking with the older Java versions of Minecraft because of their ability to run &amp;ldquo;mods&amp;rdquo;.  In order to appeal to the &amp;ldquo;mod&amp;rdquo; market Microsoft has begun introducing methods for modifying Minecraft such as configuration files to alter behaviours and it just recently announced a Code Builder programming facility but this is limited to the Education version.&lt;/p&gt;

&lt;p&gt;Whilst Minecraft is great for teaching computational thinking and coding to students that love Minecraft it is also being adopted for teaching outside of the ICT curriculum.  The &lt;a href=&#34;https://education.minecraft.net/class-resources/lessons/&#34;&gt;Minecraft Education&lt;/a&gt; site has a variety of lessons that have been created in areas such as maths, science and geography.  As an example, two science teachers in Perth produced a &lt;a href=&#34;https://openjournals.library.sydney.edu.au/index.php/CAL/article/view/10331&#34;&gt;paper&lt;/a&gt; that detailed their efforts to teach Earth science using Minecraft.  One of the lessons involved students virtually digging through various stratum the teachers had set up in the ground of the Minecraft world.  They reported high levels of engagement and considered the trial a success.&lt;/p&gt;

&lt;h3 id=&#34;example&#34;&gt;Example&lt;/h3&gt;

&lt;p&gt;This video covers all the basic circuits and mechanisms that can be developed using redstone in Minecraft.&lt;/p&gt;

&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/zeddHbJLf1Y&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://soldmeadow.github.io/educ5464/tools/p5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>18819519@student.uwa.edu.au (Stephen Oldmeadow)</author>
      <guid>https://soldmeadow.github.io/educ5464/tools/p5/</guid>
      <description>

&lt;h1 id=&#34;p5-js&#34;&gt;p5.js&lt;/h1&gt;

&lt;p&gt;&lt;img src=&#34;../../img/p5.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://p5js.org/&#34;&gt;p5.js&lt;/a&gt; is a JavaScript library that aims to make creative coding accessible to artists, designers, educators and students.&lt;/p&gt;

&lt;h3 id=&#34;pros&#34;&gt;Pros&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Easy to use.&lt;/li&gt;
&lt;li&gt;Free.&lt;/li&gt;
&lt;li&gt;Web browser based so it runs on many platforms.&lt;/li&gt;
&lt;li&gt;Many examples.&lt;/li&gt;
&lt;li&gt;Uses JavaScript which is an industry standard programming language with a lot of learning materials and support.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;cons&#34;&gt;Cons&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Simplified framework limits scope of projects.&lt;/li&gt;
&lt;li&gt;No standard development environment so some time must be spent investigating tools and setting up a development environment.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;recommended-for&#34;&gt;Recommended For&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;A great next step for students that are pushing the boundaries of what is possible in Scratch or other visual programming tools.&lt;/li&gt;
&lt;li&gt;Year 8, 9 and 10 programming classes as a first introduction to a general purpose programming language.&lt;/li&gt;
&lt;li&gt;Developing interactive teaching resources for maths, science and ICT.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;details&#34;&gt;Details&lt;/h3&gt;

&lt;p&gt;p5.js is part of the Processing family that aims to make creative coding accessible to artists, designers, educators and students.  p5.js has the additional goal of providing an environment that runs in modern web browsers with no additional requirements.  The concept of creative coding is somewhat nebulous but generally covers artistic endeavours that may or may not be interactive and often process images, sounds and video.&lt;/p&gt;

&lt;p&gt;p5.js is a great introduction to what the Australian Digital Technologies Curriculum describes as a general purpose programming language.  p5.js uses the JavaScript language which is an industry standard programming language that is part of the glue (along with HTML and CSS) that enables interactive web sites.  Whilst students will be introduced to JavaScript p5.js deliberately limits the scope to reduce the cognitive load.  Students can produce engaging, interactive programs with only a few lines of code.&lt;/p&gt;

&lt;p&gt;p5.js is free and open source.  As it is browser based it will run on any device that can run modern JavaScript including iPads and netbooks.  For development all that is required is a text editor, however, it would be recommended to introduce students to an integrated development environment that provides scaffolding such as syntax highlighting and code completion.  A great option is Microsoft&amp;rsquo;s Visual Studio Code which is free and runs on Mac OS X and Windows.&lt;/p&gt;

&lt;p&gt;On the downside, the type of project that can be developed with p5.js is limited.  For example, although games can be developed it is not recommended.  However, once students want to move to the next level they can easily transport their JavaScript to other frameworks such as &lt;a href=&#34;https://phaser.io/&#34;&gt;Phaser&lt;/a&gt; which is an HTML5 game framework that uses JavaScript as its programming language.&lt;/p&gt;

&lt;h3 id=&#34;example&#34;&gt;Example&lt;/h3&gt;

&lt;p&gt;This is an example of what can be done using p5.js.  The example is taken from the openprocessing website.&lt;/p&gt;

&lt;iframe src=&#34;https://www.openprocessing.org/sketch/152169/embed/&#34; width=&#34;600&#34; height=&#34;400&#34;&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://soldmeadow.github.io/educ5464/tools/scratch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>18819519@student.uwa.edu.au (Stephen Oldmeadow)</author>
      <guid>https://soldmeadow.github.io/educ5464/tools/scratch/</guid>
      <description>

&lt;h1 id=&#34;scratch&#34;&gt;Scratch&lt;/h1&gt;

&lt;p&gt;&lt;img src=&#34;../../img/scratch.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://scratch.mit.edu/&#34;&gt;Scratch&lt;/a&gt; is a visual programming tool that is targeted at beginning programmers.&lt;/p&gt;

&lt;h3 id=&#34;pros&#34;&gt;Pros&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Easy to use.&lt;/li&gt;
&lt;li&gt;Free.&lt;/li&gt;
&lt;li&gt;Web and desktop versions.&lt;/li&gt;
&lt;li&gt;Online community with over 1 million shared projects.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;cons&#34;&gt;Cons&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Web version requires Flash.&lt;/li&gt;
&lt;li&gt;Screen size of projects is limited to 480x360 pixels.&lt;/li&gt;
&lt;li&gt;More complex projects require convoluted work arounds.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;recommended-for&#34;&gt;Recommended For&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Introduction to programming for primary school, Year 7 and Year 8 students.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;details&#34;&gt;Details&lt;/h3&gt;

&lt;p&gt;Scratch is a visual programming tool that was developed by the Lifelong Kindergarten Group which is part of the MIT Media Lab.  It can be seen as a spiritual successor to the Logo programming language that was developer by Seymour Papert to teach programming concepts to children.&lt;/p&gt;

&lt;p&gt;Scratch is a fantastic entry point to introduce students to programming and it is widely used in schools and extra-curricular programs such as CoderDojo.  Students can create a myriad of interactive projects such as games, animations, interactive movies and electronic cards.&lt;/p&gt;

&lt;p&gt;Scratch has a web based interface that requires Flash to run as well as a desktop version that can run on Mac OS X and Windows.  It does not require a lot of resources and will run comfortably on older hardware and limited devices such a netbooks.&lt;/p&gt;

&lt;p&gt;A big advantage of Scratch is the online community that has grown up around it.  Scratch community members are encouraged to share their projects and remix other people&amp;rsquo;s projects.  In addition to sharing projects Scratch community members participate in online forums and it is a great introduction to online collaboration and communities for children.  The community is well moderated.&lt;/p&gt;

&lt;p&gt;On the downside Scratch is showing its age, it has just recently celebrated its 10th anniversary.  This is most apparent in its dependence upon Flash which has slowly been falling from favour as web sites move away from reliance on browser plugins mainly due to security concerns.  The screen size of 480x360 seems antiquated in today&amp;rsquo;s widescreen high definition world.  However, Scratch 3.0 is in the works and promises a modernised version based on HTML 5 technologies.&lt;/p&gt;

&lt;p&gt;The developers of Scratch have put considerable thought into keeping it simple but, unfortunately, this can cause limitations once students want to undertake more ambitious projects.  Often complex Scratch projects will have to resort to workarounds and poor practices to bypass limitations.  Once students get to the point that they are &amp;ldquo;fighting&amp;rdquo; with the limitations of Scratch I would recommend they move to a new environment such as p5.js.&lt;/p&gt;

&lt;h3 id=&#34;example-bugs&#34;&gt;Example - &amp;ldquo;Bugs&amp;rdquo;&lt;/h3&gt;

&lt;p&gt;This is an example of what can be done in Scratch, click on the green flag to run.  Note that you will require Flash support to be enabled in your browser to run the example.&lt;/p&gt;

&lt;p&gt;&lt;iframe allowtransparency=&#34;true&#34; width=&#34;485&#34; height=&#34;402&#34; src=&#34;//scratch.mit.edu/projects/embed/112550184/?autostart=false&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://soldmeadow.github.io/educ5464/tools/unity/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>18819519@student.uwa.edu.au (Stephen Oldmeadow)</author>
      <guid>https://soldmeadow.github.io/educ5464/tools/unity/</guid>
      <description>

&lt;h1 id=&#34;unity&#34;&gt;Unity&lt;/h1&gt;

&lt;p&gt;&lt;img src=&#34;../../img/unity.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://unity3d.com/&#34;&gt;Unity&lt;/a&gt; is a cross-platform game engine and integrated development environment.&lt;/p&gt;

&lt;h3 id=&#34;pros&#34;&gt;Pros&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Free for not for profit and education.&lt;/li&gt;
&lt;li&gt;Industry standard used on many famous games such as Angry Birds 2 and Kerbal Space Program.&lt;/li&gt;
&lt;li&gt;Strong support and active user community.&lt;/li&gt;
&lt;li&gt;Many paths for differentiated learning as projects can be created with no coding but at the other end the scope for complexity is unlimited and students could build a production ready game.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;cons&#34;&gt;Cons&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Learning curve can be steep, particularly for the teacher.&lt;/li&gt;
&lt;li&gt;Requires moderately capable hardware to run the IDE.&lt;/li&gt;
&lt;li&gt;Although Unity is free there are add-ons for purchase.  Whilst add-ons are not necessary there are situations where they are highly recommended and would save a lot of time.  It would be prudent to budget for at least some expenditure on add-ons.  The price is often low ($10-$20) with very few add-ons exceeding $100.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;recommended-for&#34;&gt;Recommended For&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Students with an interest in game development.&lt;/li&gt;
&lt;li&gt;Year 9 and 10 advanced programming classes.&lt;/li&gt;
&lt;li&gt;Year 11 and 12 students in vocational ICT courses.&lt;/li&gt;
&lt;li&gt;Introduction to 3D graphics concepts and 3D maths concepts.&lt;/li&gt;
&lt;li&gt;Development of interactive teaching tools that utilise 3D graphics including virtual-reality and augmented-reality.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;details&#34;&gt;Details&lt;/h3&gt;

&lt;p&gt;Unity is a game engine and integrated development environment that has the goal of &amp;ldquo;democratising game development&amp;rdquo;.  Whilst Unity is free for not for profit and education uses it is a commercial enterprise with payment required based on the annual revenue of the organisation using it.&lt;/p&gt;

&lt;p&gt;Unity is an industry standard tool that is widely used in many well known products.  It is particularly strong in the mobile gaming and virtual-reality markets.  It may be motivating for students to know they are learning to use the same tool that was used to make products that they use.&lt;/p&gt;

&lt;p&gt;Unity has a strong focus on education.  Unity provide many great learning resources for free on their web site.  Unity provides the Unity Educator Toolkit for free to teachers to assist them in developing secondary school curriculums that utilise Unity.  Unity has also recently introduced a certification process and students could potentially sit exams to get an industry accepted qualification.&lt;/p&gt;

&lt;p&gt;Whilst Unity is described as a game engine it can be used for many applications outside of gaming.  It is often used for architectural visualisation for example.  The school I am currently doing my practicum at built a 3d model of their school buildings in Unity and used that as a basis for students to build games around.  However, such a 3d model could also be incorporated into virtual-reality applications for the development of applications like a 3d school tour.&lt;/p&gt;

&lt;p&gt;On the downside Unity requires moderately capable hardware for running the development environment.  The flexibility and scope of Unity mean that it can initially be overwhelming, however, it is possible to make meaningful progress by learning a small subset of its capabilities.  For example, many compelling projects can be developed with no or minimal coding.&lt;/p&gt;

&lt;p&gt;For students that want to delve into coding Unity offers many possibilities.  It supports two scripting languages.  One is derived from JavaScript and offers a good path for students that have familiarity with that language.  The other scripting language is C# (pronounced C sharp) which is a modern object-oriented language on a par with Java and Swift.  Unity also allows development of extensions in C or C++ and has a shader programming language for low level development of programs that run on graphics processing units.&lt;/p&gt;

&lt;p&gt;Unity is a good choice for teaching coding to students that are motivated to learn how to develop games.  Unity is a standard tool for the &lt;a href=&#34;https://www.stemgames.org.au&#34;&gt;Australian STEM Video Games Challenge&lt;/a&gt; in the Year 9 to Year 12 category so that gives an indication of the age range that Unity is suitable for.&lt;/p&gt;

&lt;h3 id=&#34;example&#34;&gt;Example&lt;/h3&gt;

&lt;p&gt;This video gives an overview of the features in the latest version of Unity.&lt;/p&gt;

&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/AJ6Mkx1KEns&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
  </channel>
</rss>